# Example GitHub Action Workflow
name: "[CUSTOM]Push Latest Rules to Elastic Security Space"

on:
    push:
      branches:
        - main
      paths:
        - '**/*.toml'
    workflow_dispatch:
      inputs:
        overwrite:
            description: 'Overwrite existing rules'
            required: false
            default: 'true'
        overwrite_exceptions:
            description: 'Overwrite existing exceptions'
            required: false
            default: 'true'
        overwrite_action_connectors:
            description: 'Overwrite existing action connectors'
            required: false
            default: 'true'
        space:
            description: 'Kibana space to use (dev or prod)'
            required: false
            default: 'dac_production'

jobs:
    sync-to-production:
        runs-on: ubuntu-latest
        env:
          CUSTOM_RULES_DIR: ${{ env.CUSTOM_RULES_DIR }}

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Set up Python 3.12
          uses: actions/setup-python@v2
          with:
            python-version: '3.12'

        - name: Install Dependencies
          run: |
            python -m pip install --upgrade pip
            pip cache purge
            pip install .[dev]

        - name: Import Rules to Kibana
          run: |
            FLAGS="-d ${{ env.CUSTOM_RULES_DIR }}/rules/ --overwrite -e -ac"
            python -m detection_rules kibana --space dac_production import-rules $FLAGS
          env:
            DR_CLOUD_ID: ${{ env.ELASTIC_CLOUD_ID }}
            DR_API_KEY: ${{ env.ELASTIC_APIKEY }}
